{"version":3,"sources":["assets/img/readed.svg","assets/img/noreaded.svg","components/Button/index.js","components/Block/index.js","components/FormField/index.js","components/IconReaded/index.js","utils/helpers/openNotification.js","utils/helpers/validateField.js","modules/LoginForm/components/LoginForm.jsx","utils/validate.js","redux/actions/user.js","redux/store.js","modules/LoginForm/index.js","modules/LoginForm/containers/LoginForm.js","modules/RegisterForm/components/RegisterForm.jsx","modules/RegisterForm/index.js","modules/RegisterForm/containers/RegisterForm.js","pages/Auth/index.js","components/Sidebar/index.js","containers/Sidebar.js","components/Message/index.js","pages/Home/index.js","App.js","index.js"],"names":["module","exports","Button","props","className","classNames","Block","children","FormField","name","placeholder","icon","type","handleChange","handleBlur","touched","errors","values","Item","help","hasFeedback","id","prefix","Icon","style","color","size","value","onChange","onBlur","IconReaded","isMe","isReaded","src","readedSvg","alt","noReadedSvg","text","title","duration","notification","message","description","key","console","dir","LoginForm","handleSubmit","isValid","isSubmitting","onSubmit","validateStatus","validateField","email","password","disabled","onClick","to","isAuth","log","rules","test","password_2","fullname","car","Object","keys","forEach","Actions","setUserData","data","payload","setIsAuth","bool","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","withFormik","enableReinitialize","mapPropsToValues","validate","validateForm","setSubmitting","then","status","history","push","catch","displayName","RegisterForm","dispatch","userActions","fetchUserRegister","err","get","indexOf","openNotification","Auth","exact","path","component","Sidebar","Select","Option","Input","Textarea","TeamOutlined","SidebarContainer","Message","avatar","date","attachments","distanceInWordsToNow","addSuffix","locale","ruLocale","map","item","url","filename","Home","App","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.09277b10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/readed.2b64c337.svg\";","module.exports = __webpack_public_path__ + \"static/media/noreaded.1456f013.svg\";","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Button as BaseButton} from \"antd\";\r\n//A simple JavaScript utility for conditionally joining classNames together.\r\nimport classNames from \"classnames\";\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = (props) => (<BaseButton className={classNames(\"button\", props.className)} {...props} />);\r\n\r\nButton.propTypes = {\r\n    className: PropTypes.string,\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n//A simple JavaScript utility for conditionally joining classNames together.\r\nimport classNames from \"classnames\";\r\n\r\nimport './Block.scss';\r\n\r\nconst Block = ({children, className}) => <div className={classNames(\"block\", className)}> {children} </div>;\r\n\r\nBlock.propTypes = {\r\n    className: PropTypes.string,\r\n}\r\n\r\nexport default Block;","  \r\nimport React from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport Icon from '@ant-design/icons';\r\n//import { validateField } from \"utils/helpers\";\r\n\r\nconst FormField = ({\r\n  name,\r\n  placeholder,\r\n  icon,\r\n  type,\r\n  handleChange,\r\n  handleBlur,\r\n  touched,\r\n  errors,\r\n  values\r\n}) => {\r\n  return (\r\n    <Form.Item\r\n      \r\n      help={!touched[name] ? \"\" : errors[name]}\r\n      hasFeedback\r\n    >\r\n      <Input\r\n        id={name}\r\n        prefix={<Icon type={icon} style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n        size=\"large\"\r\n        placeholder={placeholder}\r\n        value={values[name]}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        type={type}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default FormField;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport readedSvg from \"../../assets/img/readed.svg\";\r\nimport noReadedSvg from \"../../assets/img/noreaded.svg\";\r\n\r\nconst IconReaded = ({ isMe, isReaded }) =>\r\n  (isMe &&\r\n    (isReaded ? (\r\n      <img className=\"message__icon-readed\" src={readedSvg} alt=\"Readed icon\" />\r\n    ) : (\r\n      <img\r\n        className=\"message__icon-readed message__icon-readed--no\"\r\n        src={noReadedSvg}\r\n        alt=\"No readed icon\"\r\n      />\r\n    ))) ||\r\n  null;\r\n\r\nIconReaded.propTypes = {\r\n  isMe: PropTypes.bool,\r\n  isReaded: PropTypes.bool\r\n};\r\n\r\nexport default IconReaded;","import { notification } from 'antd';\r\n\r\nexport default ({ text, type = 'info', title, duration = 3 }) =>\r\n  notification[type]({\r\n    message: title,\r\n    description: text,\r\n    duration,\r\n  });","export default (key, touched, errors) => {\r\n    console.dir(key, touched, errors);\r\n    if (touched[key]) {\r\n      if (errors[key]) {\r\n        return \"error\";\r\n      } else {\r\n        return \"success\";\r\n      }\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };","  \r\nimport React from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport Icon from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Block } from \"components\";\r\n\r\nimport { validateField } from \"utils/helpers\";\r\n\r\nconst LoginForm = props => {\r\n    const {\r\n      values,\r\n      touched,\r\n      errors,\r\n      handleChange,\r\n      handleBlur,\r\n      handleSubmit,\r\n      isValid,\r\n      isSubmitting\r\n    } = props;\r\n    return (\r\n      <div>\r\n        <div className=\"auth__top\">\r\n          <h2>Войти в аккаунт</h2>\r\n          <p>Пожалуйста, войдите в свой аккаунт</p>\r\n        </div>\r\n        <Block>\r\n          <Form onSubmit={handleSubmit} className=\"login-form\">\r\n           \r\n            <Form.Item\r\n              validateStatus={validateField(\"email\", touched, errors)}\r\n              help={!touched.email ? \"\" : errors.email}\r\n              hasFeedback\r\n            >\r\n              <Input\r\n                id=\"email\"\r\n                prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                size=\"large\"\r\n                placeholder=\"E-Mail\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n            //   validateStatus={validateField(\"password\", touched, errors)}\r\n              help={!touched.password ? \"\" : errors.password}\r\n              hasFeedback\r\n            >\r\n              <Input\r\n                id=\"password\"\r\n                prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                size=\"large\"\r\n                type=\"password\"\r\n                placeholder=\"Пароль\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n              <Button\r\n                disabled={isSubmitting}\r\n                onClick={handleSubmit}\r\n                type=\"primary\"\r\n                size=\"large\"\r\n              >\r\n                Войти в аккаунт\r\n              </Button>\r\n            </Form.Item>\r\n            <Link className=\"auth__register-link\" to=\"/signup\">\r\n              Зарегистрироваться\r\n            </Link>\r\n          </Form>\r\n        </Block>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default LoginForm;\r\n\r\n  /* Form.item\r\n  help - Display error message\r\n  hasFeedback - Display status of Form\r\n  \r\n  */","export default ({isAuth, values, errors}) => {\r\n    console.log(isAuth, \"isAuth\");\r\n    const rules = {\r\n        email: value => {\r\n            if(!value){\r\n                errors.email = \"Введите E-Mail\";\r\n            } else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)){\r\n                errors.email = \"Неверный E-Mail\";\r\n            }\r\n        },\r\n        password: value => {\r\n            if(!value){\r\n                errors.password = \"Введите пароль\";\r\n            //Проверяем сложность пароля\r\n            } else if(\r\n                !isAuth &&\r\n                !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)\r\n            ){\r\n                errors.password = \"Слишком лёгкий пароль\";\r\n            }\r\n        },\r\n        password_2: value => {\r\n            if(!isAuth && value !== values.password){\r\n                errors.password_2 = \"Пароли не совпадают\";\r\n            }\r\n        },\r\n\r\n\r\n        fullname: value => {\r\n            if (!isAuth && !value) {\r\n                console.log(\"дошел fullname\");\r\n              errors.fullname = \"Укажите свое имя и фамилию\";\r\n            }\r\n        }\r\n    }\r\n    console.log(values, \"check values\");\r\n    var car = Object.keys(values);\r\n    console.log(car, \"check Object\");\r\n    Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n    console.log(errors, \"errors\");\r\n}","// import { openNotification } from 'utils/helpers';\r\n// import { userApi } from 'utils/api';\r\n\r\nconst Actions = {\r\n  setUserData: data => ({\r\n    type: 'USER:SET_DATA',\r\n    payload: data,\r\n  }),\r\n  setIsAuth: bool => ({\r\n    type: 'USER:SET_IS_AUTH',\r\n    payload: bool,\r\n  }),\r\n//   fetchUserData: () => dispatch => {\r\n//     userApi\r\n//       .getMe()\r\n//       .then(({ data }) => {\r\n//         dispatch(Actions.setUserData(data));\r\n//       })\r\n//       .catch(err => {\r\n//         if (err.response.status === 403) {\r\n//           dispatch(Actions.setIsAuth(false));\r\n//           delete window.localStorage.token;\r\n//         }\r\n//       });\r\n//   },\r\n//   fetchUserLogin: postData => dispatch => {\r\n//     return userApi\r\n//       .signIn(postData)\r\n//       .then(({ data }) => {\r\n//         const { token } = data;\r\n//         openNotification({\r\n//           title: 'Отлично!',\r\n//           text: 'Авторизация успешна.',\r\n//           type: 'success',\r\n//         });\r\n//         window.axios.defaults.headers.common['token'] = token;\r\n//         window.localStorage['token'] = token;\r\n//         dispatch(Actions.fetchUserData());\r\n//         dispatch(Actions.setIsAuth(true));\r\n//         return data;\r\n//       })\r\n//       .catch(({ response }) => {\r\n//         openNotification({\r\n//           title: 'Ошибка при авторизации',\r\n//           text: 'Неверный логин или пароль',\r\n//           type: 'error',\r\n//         });\r\n//       });\r\n//   },\r\n//   fetchUserRegister: postData => () => {\r\n//     return userApi.signUp(postData);\r\n//   },\r\n};\r\n\r\nexport default Actions;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n//import rootReducer from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  function(){},\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import LoginForm from \"./containers/LoginForm\";\r\n\r\nexport default LoginForm;","import { withFormik } from 'formik';\r\n\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nimport validateForm from 'utils/validate';\r\nimport { userActions } from 'redux/actions';\r\n\r\nimport store from 'redux/store';\r\n\r\nconst LoginFormContainer = withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: () => ({\r\n    email: '',\r\n    password: '',\r\n  }),\r\n  validate: values => {\r\n    let errors = {};\r\n\r\n    validateForm({ isAuth: true, values, errors });\r\n\r\n    return errors;\r\n  },\r\n  //Функция обрабатывающся результаты формы\r\n  //setSubmitting - функция библиотеки formik для изменения статуса отправки isSubmitting\r\n  handleSubmit: (values, { setSubmitting, props }) => {\r\n    store\r\n      // .dispatch(userActions.fetchUserLogin(values))\r\n      .then(({ status }) => {\r\n        if (status === 'success') {\r\n          props.history.push('/');\r\n        }\r\n        setSubmitting(false);\r\n      })\r\n      .catch(() => {\r\n        setSubmitting(false);\r\n      });\r\n  },\r\n  displayName: 'LoginForm',\r\n})(LoginForm);\r\n\r\nexport default LoginFormContainer;","import React from \"react\";\r\nimport { Form } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {InfoCircleTwoTone} from '@ant-design/icons';\r\n\r\nimport { Button, Block, FormField} from \"components\";\r\n\r\nimport \"styles/RegisterForm.scss\";\r\n\r\nconst success = false;\r\n\r\nconst RegisterForm = props => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isValid,\r\n    isSubmitting\r\n  } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"auth__top\">\r\n        <h2>Регистрация</h2>\r\n        <p>Для входа в чат, вам нужно зарегистрироваться</p>\r\n        {errors ? (<div>errors</div>): \"\"}\r\n        {console.log(errors, \"Ошибки\")}\r\n      </div>\r\n      <Block>\r\n        {!success ? (\r\n          <Form onSubmit={handleSubmit} className=\"login-form\">\r\n            <FormField\r\n              name=\"email\"\r\n              icon=\"mail\"\r\n              placeholder=\"E-Mail\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n\r\n            <FormField\r\n              name=\"fullname\"\r\n              icon=\"user\"\r\n              placeholder=\"Ваше имя и фамилия\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              \r\n              values={values}\r\n            />\r\n\r\n            <FormField\r\n              name=\"password\"\r\n              icon=\"lock\"\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n\r\n            <FormField\r\n              name=\"password_2\"\r\n              icon=\"lock\"\r\n              placeholder=\"Повторите пароль\"\r\n              type=\"password\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n\r\n            <Form.Item>\r\n              {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n              <Button\r\n                disabled={isSubmitting}\r\n                onClick={handleSubmit}\r\n                type=\"primary\"\r\n                size=\"large\"\r\n              >\r\n                Зарегистрироваться\r\n              </Button>\r\n            </Form.Item>\r\n            <Link className=\"auth__register-link\" to=\"/signin\">\r\n              Войти в аккаунт\r\n            </Link>\r\n          </Form>\r\n        ) : (\r\n          <div className=\"auth__success-block\">\r\n            <div>\r\n              {/* <Icon type=\"info-circle\" theme=\"twoTone\" /> */}\r\n              <InfoCircleTwoTone />\r\n            </div>\r\n            <h2>Подтвердите свой аккаунт</h2>\r\n            <p>\r\n              На Вашу почту отправлено письмо с ссылкой на подтверждение\r\n              аккаунта.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;","import RegisterForm from \"./containers/RegisterForm\";\r\n\r\nexport default RegisterForm;","import { withFormik } from 'formik';\r\nimport get from 'lodash/get';\r\n\r\nimport RegisterForm from '../components/RegisterForm';\r\n\r\nimport validateForm from 'utils/validate';\r\nimport { userActions } from 'redux/actions';\r\nimport { openNotification } from 'utils/helpers';\r\n\r\nimport store from 'redux/store';\r\n\r\nexport default withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: () => ({\r\n    email: '',\r\n    fullname: '',\r\n    password: '',\r\n    password_2: '',\r\n  }),\r\n  validate: values => {\r\n    let errors = {};\r\n    validateForm({ isAuth: false, values, errors });\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, { setSubmitting, props }) => {\r\n    store\r\n      .dispatch(userActions.fetchUserRegister(values))\r\n      .then(() => {\r\n        props.history.push('/signup/verify');\r\n        setSubmitting(false);\r\n      })\r\n      .catch(err => {\r\n        if (get(err, 'response.data.message.errmsg', '').indexOf('dup') >= 0) {\r\n          openNotification({\r\n            title: 'Ошибка',\r\n            text: 'Аккаунт с такой почтой уже создан.',\r\n            type: 'error',\r\n            duration: 5000\r\n          });\r\n        } else {\r\n          openNotification({\r\n            title: 'Ошибка',\r\n            text: 'Возникла серверная ошибка при регистрации. Повторите позже.',\r\n            type: 'error',\r\n            duration: 5000\r\n          });\r\n        }\r\n        setSubmitting(false);\r\n      })\r\n  },\r\n  displayName: 'RegisterForm',\r\n})(RegisterForm);\r\n\r\n// export default RegisterFormContainer;","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport { LoginForm, RegisterForm } from \"modules\";\r\n//import CheckEmailInfo from \"./components/CheckEmailInfo\";\r\n\r\nimport \"./Auth.scss\";\r\n\r\nconst Auth = () => (\r\n  <section className=\"auth\">\r\n    <div className=\"auth__content\">\r\n      <Route exact path=\"/signin\" component={LoginForm} />\r\n      <Route exact path=\"/signup\" component={RegisterForm} />\r\n      \r\n    </div>\r\n  </section>\r\n);\r\n\r\n/*<Route exact path=\"/signup/verify\" component={CheckEmailInfo} />*/\r\n\r\nexport default Auth;","import React from 'react';\r\nimport {Button, Modal, Select, Input, Form } from 'antd';\r\nimport {TeamOutlined} from '@ant-design/icons';\r\nimport './Sidebar.scss';\r\n\r\nconst {Option} = Select;\r\nconst {Textarea} = Input;\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"chat__sidebar\">\r\n            <div className=\"chat__sidebar-header\">\r\n                <div>\r\n                    <TeamOutlined />\r\n                    <span>Список диалогов</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Sidebar from \"../components/Sidebar\";\r\nconst SidebarContainer = () => {\r\n\r\n\r\n    return (\r\n        <Sidebar />\r\n    );\r\n}\r\n\r\nexport default SidebarContainer;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport distanceInWordsToNow from 'date-fns/distance_in_words_to_now';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport classNames from 'classnames';\r\n\r\nimport \"./Message.scss\";\r\nimport {IconReaded} from \"../\";\r\n\r\nconst Message = ({avatar, fullname, text, date, isMe, isReaded, attachments}) =>{\r\n    return(\r\n        <div className={classNames(\"message\", {'message--isme':isMe})}>\r\n            <div className=\"message__info\">\r\n                <div className=\"message__avatar\">\r\n                    <img \r\n                        src={avatar} \r\n                        alt={`Avatar ${fullname}`}/>\r\n                </div>\r\n                <div className=\"message__content\">\r\n                    \r\n                    \r\n                    <div className=\"message__bubble\">\r\n                        <p className=\"message__text\">{text}</p> \r\n                    </div> \r\n                    <span className=\"message__date\">{distanceInWordsToNow(date, {addSuffix: true, locale: ruLocale})}</span>\r\n                    <div className=\"message__attachments\">\r\n                        {attachments && attachments.map(item=>(\r\n                            <div className=\"message__attachments-item\">\r\n                                <img \r\n                                    src={item.url}\r\n                                    alt={item.filename} />\r\n                            </div>\r\n                            )\r\n                            )\r\n                        }\r\n                    </div>  \r\n\r\n                </div>\r\n                \r\n                <IconReaded isMe={isMe} isReaded={true} />\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\nMessage.propTypes = {\r\n    avatar: PropTypes.string,\r\n    text: PropTypes.string,\r\n    date: PropTypes.string,\r\n    fullname: PropTypes.string,\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport { LoginForm} from \"modules\";\r\nimport SidebarContainer from 'containers/Sidebar';\r\nimport Message from \"../../components/Message\"; \r\n\r\nimport \"./Home.scss\";\r\n\r\nconst Home = () => (\r\n  \r\n    <section className=\"home\">\r\n      <Message \r\n        fullname=\"Маша\"\r\n        avatar=\"https://tinyfac.es/data/avatars/A7299C8E-CEFC-47D9-939A-3C8CA0EA4D13-200w.jpeg\"\r\n        text=\"Соси писос Брат\"\r\n        date=\"Sun Apr 21 2019 21:30:07\"\r\n        isMe={false}\r\n        isReaded={true}\r\n        attachments={[\r\n            {\r\n                filename: 'image.jpg',\r\n                url: 'https://images.unsplash.com/photo-1591567967940-93c1efc6765c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80',\r\n            },\r\n            {\r\n                filename: 'image.jpg',\r\n                url: ' https://images.unsplash.com/photo-1591609010524-339e8fcd3962?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80',\r\n            },\r\n\r\n           \r\n        ]} />\r\n      <Message \r\n        fullname=\"Маша\"\r\n        avatar=\"https://tinyfac.es/data/avatars/A7299C8E-CEFC-47D9-939A-3C8CA0EA4D13-200w.jpeg\"\r\n        text=\"Сам Соси\"\r\n        date=\"Sun Apr 21 2019 21:30:07\"\r\n        isMe={true}\r\n        attachments={[\r\n            {\r\n                filename: 'image.jpg',\r\n                url: 'https://images.unsplash.com/photo-1588612568467-a6b245a1f4a5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1000&q=80',\r\n            }\r\n        ]} />\r\n      <Message \r\n        fullname=\"Маша\"\r\n        avatar=\"https://tinyfac.es/data/avatars/A7299C8E-CEFC-47D9-939A-3C8CA0EA4D13-200w.jpeg\"\r\n        text=\"Соси писос Брат\"\r\n        date=\"Sun Apr 21 2019 21:30:07\" />\r\n      <SidebarContainer />\r\n    </section>\r\n\r\n);\r\n\r\nexport default Home;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Route, Redirect, Switch} from \"react-router-dom\";\n\nimport {Button, Block} from 'components';\n\nimport {Auth, Home} from \"pages\";\n\nconst App = props => {\n  //const { isAuth } = props;\n  const isAuth = true;\n  return (\n    <div className=\"wrapper\">\n      <Switch>\n        <Route\n          exact\n          path={[\"/signin\", \"/signup\", \"/signup/verify\"]}\n          component={Auth}\n        />\n        <Route\n          path=\"/\"\n          render={() => (isAuth ? <Home /> : <Redirect to=\"/signin\" />)}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\n//import { userActions } from \"redux/actions\";\n\nimport store from \"redux/store\";\n\nimport \"./styles/index.scss\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\n//store.dispatch(userActions.fetchUserData());\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}